root = true

[*.{cs,xaml}]
indent_style = tab
indent_size = 4
end_of_line = crlf
insert_final_newline = true
charset = utf-8-bom

[*.nuspec]
indent_style = space
indent_size = 2
end_of_line = crlf
insert_final_newline = true
charset = utf-8-bom

###############################
# .NET Coding Conventions     #
###############################
[*.{cs,vb}]
# Organize usings
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false
# this. preferences
dotnet_style_qualification_for_field = true:warning
dotnet_style_qualification_for_property = true:warning
dotnet_style_qualification_for_method = true:warning
dotnet_style_qualification_for_event = true:warning
# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning
# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent
dotnet_style_readonly_field = true:suggestion
# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:warning
# Expression-level preferences
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:silent
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent

###############################
# C# Coding Conventions       #
###############################
[*.cs]
# var preferences
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = true:suggestion
# Expression-bodied members
csharp_style_expression_bodied_methods = when_on_single_line:silent
csharp_style_expression_bodied_constructors = when_on_single_line:silent
csharp_style_expression_bodied_operators = when_on_single_line:silent
csharp_style_expression_bodied_properties = when_on_single_line:silent
csharp_style_expression_bodied_indexers = when_on_single_line:silent
csharp_style_expression_bodied_accessors = when_on_single_line:silent
csharp_style_expression_bodied_lambdas = when_on_single_line:silent
csharp_style_expression_bodied_local_functions = when_on_single_line:silent
# Pattern matching preferences
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
# Inlined variable declarations
csharp_style_inlined_variable_declaration = true:suggestion
# Expression-level preferences
csharp_prefer_simple_default_expression = true:suggestion
# Null-checking preferences
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion
# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion
# Code block preferences
csharp_prefer_braces = when_multiline:silent
# Unused value preferences
csharp_style_unused_value_expression_statement_preference = discard_variable:silent
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
# Index and range preferences
csharp_style_prefer_index_operator = true:warning
csharp_style_prefer_range_operator = true:suggestion
# Miscellaneous preferences
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_using_directive_placement = outside_namespace:silent
csharp_prefer_static_local_function = true:suggestion
csharp_prefer_simple_using_statement = true:suggestion
csharp_style_prefer_switch_expression = true:suggestion

###############################
# C# Formatting Rules         #
###############################
[*.cs]
# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true
# Indentation preferences
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents_when_block = true
# Space preferences
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_after_comma = true
csharp_space_before_comma = false
csharp_space_after_dot = false
csharp_space_before_dot = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_before_semicolon_in_for_statement = false
csharp_space_around_declaration_statements = false
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false
# Wrapping preferences
csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks = true
# Using directive options
csharp_using_directive_placement = outside_namespace

###############################
# Naming Conventions          #
###############################
# Use prefix "_" and camel or pascal case for private fields & events
dotnet_naming_rule.private_fields.severity                            = warning
dotnet_naming_rule.private_fields.symbols                             = private_fields
dotnet_naming_rule.private_fields.style                               = private_field_style
dotnet_naming_symbols.private_fields.applicable_kinds                 = field, event
dotnet_naming_symbols.private_fields.applicable_accessibilities       = private
dotnet_naming_style.private_field_style.capitalization                = camel_case,pascal_case
dotnet_naming_style.private_field_style.required_prefix               = _

# Use prefix "_" and camel case for fields & events
dotnet_naming_rule.protected_fields_rule.severity                     = warning
dotnet_naming_rule.protected_fields_rule.symbols                      = protected_fields
dotnet_naming_rule.protected_fields_rule.style                        = protected_field_style
dotnet_naming_symbols.protected_fields.applicable_kinds               = field, event
dotnet_naming_symbols.protected_fields.applicable_accessibilities     = protected,protected_internal
dotnet_naming_style.protected_field_style.capitalization              = camel_case
dotnet_naming_style.protected_field_style.required_prefix             = _

# Use pascal case for public fields & events
dotnet_naming_rule.public_field_rule.severity                         = warning
dotnet_naming_rule.public_field_rule.symbols                          = public_field_symbols
dotnet_naming_rule.public_field_rule.style                            = public_field_style
dotnet_naming_symbols.public_field_symbols.applicable_kinds           = field, event
dotnet_naming_symbols.public_field_symbols.applicable_accessibilities = public
dotnet_naming_style.public_field_style.capitalization                 = pascal_case

# Use pascal case for namespace, class, struct, enum, property, method, event, and delegate
dotnet_naming_rule.pascal_case_rule.severity                          = warning
dotnet_naming_rule.pascal_case_rule.symbols                           = pascal_case_symbols
dotnet_naming_rule.pascal_case_rule.style                             = pascal_case_style
dotnet_naming_symbols.pascal_case_symbols.applicable_kinds            = namespace, class, struct, enum, property, method, delegate
dotnet_naming_style.pascal_case_style.capitalization                  = pascal_case

# Use prefix "I" for interface
dotnet_naming_rule.interface_rule.severity                            = warning
dotnet_naming_rule.interface_rule.symbols                             = interface_symbols
dotnet_naming_rule.interface_rule.style                               = interface_style
dotnet_naming_symbols.interface_symbols.applicable_kinds              = interface
dotnet_naming_style.interface_style.capitalization                    = pascal_case
dotnet_naming_style.interface_style.required_prefix                   = I
