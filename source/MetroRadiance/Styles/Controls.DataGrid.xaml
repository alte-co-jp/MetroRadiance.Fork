<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mrap="clr-namespace:MetroRadiance.UI.AttachedProperties"
                    xmlns:mrui="clr-namespace:MetroRadiance.UI">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MetroRadiance;component/Styles/Controls.ComboBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MetroRadiance;component/Styles/Controls.CheckBox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.Static.Foreground" Color="{DynamicResource ActiveForegroundColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.Static.Background" Color="{DynamicResource SemiactiveBackgroundColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.Static.Border" Color="{DynamicResource BorderColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.Static.Editable.Background" Color="{DynamicResource ActiveBackgroundColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.Static.Row.Background" Color="{DynamicResource SemiactiveBackgroundColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.Static.Row.AlternatingBackground" Color="{DynamicResource ThemeColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.Static.Grid.Border" Color="{DynamicResource SemiactiveBorderColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.Static.ValidationError.Foreground" Color="{DynamicResource ValidationErrorColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.Static.CurrentCell.Border" Color="{DynamicResource AccentActiveColorKey}"/>

    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.Static.Header.Foreground" Color="{DynamicResource ActiveForegroundColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.Static.Header.Glyph" Color="{DynamicResource ForegroundColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.Static.Header.Background" Color="{DynamicResource BackgroundColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.Static.Header.Border" Color="{DynamicResource BorderColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.Static.Header.Separator" Color="{DynamicResource ActiveBorderColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.Static.Header.DropLocationIndicator" Color="{DynamicResource ActiveForegroundColorKey}"/>

    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.Selected.Foreground" Color="{DynamicResource AccentForegroundColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.Selected.Background" Color="{DynamicResource AccentHighlightColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.Selected.Editable.Background" Color="{DynamicResource AccentActiveColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.Selected.Inactive.Foreground" Color="{DynamicResource HighlightForegroundColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.Selected.Inactive.Background" Color="{DynamicResource HighlightBackgroundColorKey}"/>

    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.Disabled.Foreground" Color="{DynamicResource InactiveForegroundColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.Disabled.Background" Color="{DynamicResource InactiveBackgroundColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.Disabled.Border" Color="{DynamicResource InactiveBorderColorKey}"/>
    
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.MouseOver.Background" Color="{DynamicResource ActiveBackgroundColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.MouseOver.Border" Color="{DynamicResource AccentActiveColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.MouseOver.Inactive.Background" Color="{DynamicResource HighlightBackgroundColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.MouseOver.Selected.Background" Color="{DynamicResource AccentActiveColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.MouseOver.Selected.Border" Color="{DynamicResource AccentColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.MouseOver.Selected.Inactive.Background" Color="{DynamicResource Highlight2BackgroundColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.MouseOver.Header.Background" Color="{DynamicResource SemiactiveBackgroundColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.MouseOver.Header.Border" Color="{DynamicResource AccentColorKey}"/>

    <SolidColorBrush x:Key="MetroRadiance.Brushes.DataGrid.Pressed.Background" Color="{DynamicResource HighlightBackgroundColorKey}"/>

    <Path x:Key="MetroRadiance.Shapes.DataGrid.Glyph.SortAscending"
          x:Shared="False"
          Margin="0"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          Data="M 0.0,4.0 L 3.5,0.0 7.0,4.0 z"
          Fill="{DynamicResource MetroRadiance.Brushes.DataGrid.Static.Header.Glyph}"/>
    <Path x:Key="MetroRadiance.Shapes.DataGrid.Glyph.SortDescending"
          x:Shared="False"
          Margin="0"
          HorizontalAlignment="Center"
          VerticalAlignment="Center" 
          Data="M 0.0,0.0 L 3.5,4.0 7.0,0.0 z"
          Fill="{DynamicResource MetroRadiance.Brushes.DataGrid.Static.Header.Glyph}"/>

    <Style x:Key="MetroRadiance.Styles.DataGridTextColumn.Element" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="2,0"/>
    </Style>
    <Style x:Key="MetroRadiance.Styles.DataGridTextColumn.EditingElement" TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource MetroRadiance.Styles.TextBoxBase}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
    </Style>

    <Style x:Key="MetroRadiance.Styles.DataGridCheckBoxColumn.Element" TargetType="{x:Type CheckBox}"
           BasedOn="{StaticResource MetroRadianceCheckBoxStyleKey}">
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>
    <Style x:Key="MetroRadiance.Styles.DataGridCheckBoxColumn.EditingElement" TargetType="{x:Type CheckBox}"
           BasedOn="{StaticResource MetroRadianceCheckBoxStyleKey}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <Style x:Key="MetroRadiance.Styles.DataGridComboBoxColumn.Element" TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource MetroRadiance.Styles.ComboBox.Base}">
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <ContentPresenter
                        Margin="1,1,1,1"
                        Content="{TemplateBinding SelectionBoxItem}"
                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                        ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        IsHitTestVisible="false" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MetroRadiance.Styles.DataGridComboBoxColumn.EditingElement" TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource MetroRadiance.Styles.ComboBox}">
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False"/>
    </Style>

    <Style x:Key="MetroRadiance.Styles.DataGrid.SelectAllButton"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="Border"
                                   Fill="{DynamicResource MetroRadiance.Brushes.DataGrid.Static.Header.Background}"
                                   SnapsToDevicePixels="True" />
                        <Polygon x:Name="Arrow"
                                 HorizontalAlignment="Right"
                                 VerticalAlignment="Bottom"
                                 Margin="8,8,3,3"
                                 Opacity="0.15"
                                 Fill="Black"
                                 Stretch="Uniform"
                                 Points="0,10 10,10 10,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border"
                                    Property="Stroke"
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Arrow"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate x:Key="MetroRadiance.Templates.DataGrid" TargetType="{x:Type DataGrid}">
        <Border x:Name="border"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}"
                Padding="{TemplateBinding Padding}"
                SnapsToDevicePixels="True">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames
                                Storyboard.TargetName="border"
                                Storyboard.TargetProperty="(Panel.Background)">
                                <ObjectAnimationUsingKeyFrames.KeyFrames>
                                    <DiscreteObjectKeyFrame
                                        KeyTime="0"
                                        Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Disabled.Background}" />
                                </ObjectAnimationUsingKeyFrames.KeyFrames>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ScrollViewer x:Name="DG_ScrollViewer"
                          Focusable="False">
                <ScrollViewer.Template>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Button Command="ApplicationCommands.SelectAll"
                                    Focusable="False"
                                    Style="{DynamicResource MetroRadiance.Styles.DataGrid.SelectAllButton}"
                                    Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}">
                                <Button.Visibility>
                                    <Binding Path="HeadersVisibility"
                                             RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}"
                                             Converter="{x:Static DataGrid.HeadersVisibilityConverter}">
                                        <Binding.ConverterParameter>
                                            <DataGridHeadersVisibility>All</DataGridHeadersVisibility>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </Button.Visibility>
                            </Button>
                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                            Grid.Column="1">
                                <DataGridColumnHeadersPresenter.Visibility>
                                    <Binding Path="HeadersVisibility"
                                             RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}"
                                             Converter="{x:Static DataGrid.HeadersVisibilityConverter}">
                                        <Binding.ConverterParameter>
                                            <DataGridHeadersVisibility>Column</DataGridHeadersVisibility>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </DataGridColumnHeadersPresenter.Visibility>
                            </DataGridColumnHeadersPresenter>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                    CanHorizontallyScroll="False"
                                                    Grid.ColumnSpan="2"
                                                    CanVerticallyScroll="False"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                    Grid.Row="1"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                       Grid.Column="2"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       Orientation="Vertical"
                                       Grid.Row="1"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"/>
                            <Grid Grid.Column="1" Grid.Row="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                                           Grid.Column="1"
                                           Maximum="{TemplateBinding ScrollableWidth}"
                                           Orientation="Horizontal"
                                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                           Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                           ViewportSize="{TemplateBinding ViewportWidth}"/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </ScrollViewer.Template>
                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </ScrollViewer>
        </Border>
    </ControlTemplate>

    <ItemsPanelTemplate x:Key="MetroRadiance.Templates.DataGrid.ItemsPanel">
        <DataGridRowsPresenter x:Name="PART_RowsPresenter"
                               IsItemsHost="True"/>
    </ItemsPanelTemplate>

    <Style x:Key="MetroRadiance.Styles.DataGrid.DataGridCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="BorderBrush"
                Value="Transparent"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Static.CurrentCell.Border}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource MetroRadiance.Brushes.DataGrid.MouseOver.Border}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource MetroRadiance.Brushes.DataGrid.MouseOver.Selected.Border}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Disabled.Foreground}"/>
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False"/>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Selected.Inactive.Background}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False"/>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Selected.Editable.Background}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Selected.Editable.Background}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MetroRadiance.Styles.DataGrid.ColumnHeaderGripper" TargetType="{x:Type Thumb}">
        <Setter Property="Width"
                Value="8"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Cursor"
                Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroRadiance.Styles.DataGrid.DataGridColumnHeader" TargetType="{x:Type DataGridColumnHeader}"
           BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
        <Setter Property="Foreground"
                Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Static.Header.Foreground}"/>
        <Setter Property="Background"
                Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Static.Header.Background}"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Padding"
                Value="5,4"/>
        <Setter Property="SeparatorVisibility"
                Value="Visible"/>
        <Setter Property="SeparatorBrush"
                Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Static.Header.Separator}"/>
        <Setter Property="BorderThickness"
                Value="0,0,0,1"/>
        <Setter Property="BorderBrush"
                Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Static.Header.Border}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Border x:Name="rowHeaderBorder"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <Grid x:Name="rowHeaderPanel">
                                <ContentPresenter
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <ContentControl x:Name="rowHeaderSortAscending"
                                        Visibility="Collapsed"
                                        Margin="1"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Top"
                                        Content="{DynamicResource MetroRadiance.Shapes.DataGrid.Glyph.SortAscending}"/>
                        <ContentControl x:Name="rowHeaderSortDescending"
                                        Visibility="Collapsed"
                                        Margin="1"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Top"
                                        Content="{DynamicResource MetroRadiance.Shapes.DataGrid.Glyph.SortDescending}"/>
                        <Border x:Name="rowHeaderSeparator"
                                Visibility="{TemplateBinding SeparatorVisibility}"
                                Margin="0,0,0,1"
                                BorderThickness="0.5,0"
                                BorderBrush="{TemplateBinding SeparatorBrush}"/>
                        <Border x:Name="rowHeaderBorderMouserOver"
                                Visibility="Collapsed"
                                Margin="0,0,0,1"
                                BorderThickness="1"
                                BorderBrush="{DynamicResource MetroRadiance.Brushes.DataGrid.MouseOver.Header.Border}"/>
                        <Thumb x:Name="PART_LeftHeaderGripper"
                               HorizontalAlignment="Left"
                               Style="{DynamicResource MetroRadiance.Styles.DataGrid.ColumnHeaderGripper}"/>
                        <Thumb x:Name="PART_RightHeaderGripper"
                               HorizontalAlignment="Right"
                               Style="{DynamicResource MetroRadiance.Styles.DataGrid.ColumnHeaderGripper}"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SortStates">
                                <VisualState x:Name="SortAscending">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="rowHeaderSortAscending"
                                            Storyboard.TargetProperty="Visibility">
                                            <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames.KeyFrames>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SortDescending">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="rowHeaderSortDescending"
                                                Storyboard.TargetProperty="Visibility">
                                            <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames.KeyFrames>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unsorted" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="rowHeaderBorder"
                                    Property="Background"
                                    Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Disabled.Background}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="CanUserSort" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="rowHeaderBorder"
                                    Property="Background"
                                    Value="{DynamicResource MetroRadiance.Brushes.DataGrid.MouseOver.Header.Background}"/>
                            <Setter TargetName="rowHeaderBorderMouserOver"
                                    Property="Visibility"
                                    Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="CanUserSort" Value="True"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="rowHeaderBorder"
                                    Property="Background"
                                    Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Pressed.Background}"/>
                            <Setter TargetName="rowHeaderPanel"
                                    Property="Margin"
                                    Value="1,1,-1,-1"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroRadiance.Styles.DataGrid.DropLocationIndicator" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Static.Header.DropLocationIndicator}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroRadiance.Styles.DataGrid.DataGridColumnHeader.DragIndicatorStyle" TargetType="{x:Type Control}">
        <Setter Property="Opacity" Value="0.6"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Static.CurrentCell.Border}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              Padding ="{TemplateBinding Padding}"
                              Background="{TemplateBinding Background}">
                        <Grid>
                            <Canvas Name="PART_VisualBrushCanvas" Margin="{TemplateBinding Margin}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroRadiance.Styles.DataGrid.RowHeaderGripper" TargetType="{x:Type Thumb}">
        <Setter Property="Height"
                Value="8"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Cursor"
                Value="SizeNS"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroRadiance.Styles.DataGrid.DataGridRowHeader" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Foreground"
                Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Static.Header.Foreground}"/>
        <Setter Property="Background"
                Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Static.Header.Background}"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Width"
                Value="6"/>
        <Setter Property="SeparatorVisibility"
                Value="Visible"/>
        <Setter Property="SeparatorBrush"
                Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Static.Header.Separator}"/>
        <Setter Property="BorderThickness"
                Value="0,0,1,0"/>
        <Setter Property="BorderBrush"
                Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Static.Header.Border}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid>
                        <Border x:Name="rowHeaderBorder"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <StackPanel x:Name="rowHeaderPanel"
                                        Orientation="Horizontal">
                                <ContentPresenter RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="Center"/>
                                <Control SnapsToDevicePixels="False"
                                         Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                                         Visibility="{Binding (Validation.HasError), Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"/>
                            </StackPanel>
                        </Border>
                        <Border x:Name="rowHeaderSeparator"
                                Visibility="{TemplateBinding SeparatorVisibility}"
                                Margin="0,0,1,0"
                                BorderThickness="0,0.5"
                                BorderBrush="{TemplateBinding SeparatorBrush}"/>
                        <Border x:Name="rowHeaderBorderMouserOver"
                                Visibility="Collapsed"
                                Margin="0,0,1,0"
                                BorderThickness="1"
                                BorderBrush="{DynamicResource MetroRadiance.Brushes.DataGrid.MouseOver.Header.Border}"/>
                        <Thumb x:Name="PART_TopHeaderGripper"
                               Style="{DynamicResource MetroRadiance.Styles.DataGrid.RowHeaderGripper}"
                               VerticalAlignment="Top"/>
                        <Thumb x:Name="PART_BottomHeaderGripper"
                               Style="{DynamicResource MetroRadiance.Styles.DataGrid.RowHeaderGripper}"
                               VerticalAlignment="Bottom"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="rowHeaderBorder"
                                    Property="Background"
                                    Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Disabled.Background}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsRowSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="rowHeaderBorder"
                                    Property="Background"
                                    Value="{DynamicResource MetroRadiance.Brushes.DataGrid.MouseOver.Background}"/>
                            <Setter TargetName="rowHeaderBorderMouserOver"
                                    Property="Visibility"
                                    Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsRowSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="rowHeaderBorder"
                                    Property="Background"
                                    Value="{DynamicResource MetroRadiance.Brushes.DataGrid.MouseOver.Selected.Background}"/>
                            <Setter TargetName="rowHeaderBorderMouserOver"
                                    Property="Visibility"
                                    Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="rowHeaderBorder"
                                    Property="Background"
                                    Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Pressed.Background}"/>
                            <Setter TargetName="rowHeaderPanel"
                                    Property="Margin"
                                    Value="1,1,-1,-1"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroRadiance.Styles.DataGrid.DataGridRow" TargetType="{x:Type DataGridRow}">
        <Setter Property="SnapsToDevicePixels"
                Value="True"/>
        <Setter Property="Validation.ErrorTemplate"
                Value="{x:Null}"/>
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Foreground="{DynamicResource MetroRadiance.Brushes.DataGrid.Static.ValidationError.Foreground}"
                               Margin="2,0,0,0"
                               Text="!"
                               VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Column="1"
                                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <DataGridDetailsPresenter Grid.Column="1"
                                                      Grid.Row="1"
                                                      SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                      Visibility="{TemplateBinding DetailsVisibility}"/>
                            <DataGridRowHeader Grid.RowSpan="2"
                                               SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                               Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                        </SelectiveScrollingGrid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Foreground -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Selected.Foreground}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Selected.Inactive.Foreground}"/>
                        </MultiTrigger>

                        <!-- Background -->
                        <!--<Trigger Property="AlternationIndex" Value="1">
                            <Setter TargetName="DGR_Border"
                                    Property="Background"
                                    Value="{Binding AlternatingRowBackground, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                        </Trigger>-->

                        <!-- Background when IsMouseOver is False -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocusWithin" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DGR_Border"
                                    Property="Background"
                                    Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Selected.Background}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocusWithin" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DGR_Border"
                                    Property="Background"
                                    Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Selected.Inactive.Background}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocusWithin" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsEditing" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DGR_Border"
                                    Property="Background"
                                    Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Selected.Editable.Background}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocusWithin" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsEditing" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DGR_Border"
                                    Property="Background"
                                    Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Static.Editable.Background}"/>
                        </MultiTrigger>

                        <!-- Background when IsMouseOver is True -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsKeyboardFocusWithin" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DGR_Border"
                                    Property="Background"
                                    Value="{DynamicResource MetroRadiance.Brushes.DataGrid.MouseOver.Background}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsKeyboardFocusWithin" Value="False"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DGR_Border"
                                    Property="Background"
                                    Value="{DynamicResource MetroRadiance.Brushes.DataGrid.MouseOver.Inactive.Background}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsKeyboardFocusWithin" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DGR_Border"
                                    Property="Background"
                                    Value="{DynamicResource MetroRadiance.Brushes.DataGrid.MouseOver.Selected.Background}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsKeyboardFocusWithin" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DGR_Border"
                                    Property="Background"
                                    Value="{DynamicResource MetroRadiance.Brushes.DataGrid.MouseOver.Selected.Inactive.Background}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsNewItem" Value="True">
                <Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
        
    <Style x:Key="MetroRadiance.Styles.DataGrid" TargetType="{x:Type DataGrid}">
        <Setter Property="Background"
                Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Static.Background}"/>
        <Setter Property="Foreground"
                Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Static.Foreground}"/>
        <Setter Property="BorderBrush"
                Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Static.Border}"/>
        <Setter Property="RowBackground"
                Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Static.Row.Background}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="HorizontalGridLinesBrush"
                Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Static.Grid.Border}"/>
        <Setter Property="VerticalGridLinesBrush"
                Value="{DynamicResource MetroRadiance.Brushes.DataGrid.Static.Grid.Border}"/>
        <Setter Property="RowDetailsVisibilityMode"
                Value="VisibleWhenSelected"/>
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="True"/>
        <Setter Property="ScrollViewer.PanningMode"
                Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False"/>
        <Setter Property="Template"
                Value="{DynamicResource MetroRadiance.Templates.DataGrid}"/>

        <Setter Property="ItemsPanel"
                Value="{DynamicResource MetroRadiance.Templates.DataGrid.ItemsPanel}"/>
        <Setter Property="CellStyle"
                Value="{DynamicResource MetroRadiance.Styles.DataGrid.DataGridCell}"/>
        <Setter Property="ColumnHeaderStyle"
                Value="{DynamicResource MetroRadiance.Styles.DataGrid.DataGridColumnHeader}"/>
        <Setter Property="DragIndicatorStyle"
                Value="{DynamicResource MetroRadiance.Styles.DataGrid.DataGridColumnHeader.DragIndicatorStyle}"/>
        <Setter Property="DropLocationIndicatorStyle"
                Value="{DynamicResource MetroRadiance.Styles.DataGrid.DropLocationIndicator}"/>
        <Setter Property="RowHeaderStyle"
                Value="{DynamicResource MetroRadiance.Styles.DataGrid.DataGridRowHeader}"/>
        <Setter Property="RowStyle"
                Value="{DynamicResource MetroRadiance.Styles.DataGrid.DataGridRow}"/>

        <Setter Property="mrap:DataGridProperties.TextColumnDefaultElementStyle"
                Value="{DynamicResource MetroRadiance.Styles.DataGridTextColumn.Element}"/>
        <Setter Property="mrap:DataGridProperties.TextColumnDefaultEditingElementStyle"
                Value="{DynamicResource MetroRadiance.Styles.DataGridTextColumn.EditingElement}"/>
        <Setter Property="mrap:DataGridProperties.CheckBoxColumnDefaultElementStyle"
                Value="{DynamicResource MetroRadiance.Styles.DataGridCheckBoxColumn.Element}"/>
        <Setter Property="mrap:DataGridProperties.CheckBoxColumnDefaultEditingElementStyle"
                Value="{DynamicResource MetroRadiance.Styles.DataGridCheckBoxColumn.EditingElement}"/>
        <Setter Property="mrap:DataGridProperties.ComboBoxColumnDefaultElementStyle"
                Value="{DynamicResource MetroRadiance.Styles.DataGridComboBoxColumn.Element}"/>
        <Setter Property="mrap:DataGridProperties.ComboBoxColumnDefaultEditingElementStyle"
                Value="{DynamicResource MetroRadiance.Styles.DataGridComboBoxColumn.EditingElement}"/>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping"
                               Value="True"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                               Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="False"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>