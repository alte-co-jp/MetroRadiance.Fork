<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mrap="clr-namespace:MetroRadiance.UI.AttachedProperties">

    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListView.Static.Foreground" Color="{DynamicResource ActiveForegroundColorKey}" />
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListView.Static.Background" Color="{DynamicResource SemiactiveBackgroundColorKey}" />
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListView.Static.Border" Color="{DynamicResource BorderColorKey}" />

    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListView.Static.Header.Foreground" Color="{DynamicResource ActiveForegroundColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListView.Static.Header.Glyph" Color="{DynamicResource ForegroundColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListView.Static.Header.Background" Color="{DynamicResource BackgroundColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListView.Static.Header.Border" Color="{DynamicResource BorderColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListView.Static.Header.Separator" Color="{DynamicResource ActiveBorderColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListView.Static.Header.DropLocationIndicator" Color="{DynamicResource ActiveForegroundColorKey}"/>

    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListView.Disabled.Foreground" Color="{DynamicResource InactiveForegroundColorKey}" />
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListView.Disabled.Background" Color="{DynamicResource InactiveBackgroundColorKey}" />
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListView.Disabled.Border" Color="{DynamicResource InactiveBorderColorKey}" />

    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListView.MouseOver.Background" Color="{DynamicResource HighlightBackgroundColorKey}" />
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListView.MouseOver.Border" Color="{DynamicResource HighlightBackgroundColorKey}" />
    <!--
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListView.MouseOver.Inactive.Background" Color="{DynamicResource HighlightBackgroundColorKey}" />
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListView.MouseOver.Inactive.Border" Color="{DynamicResource HighlightBackgroundColorKey}" />
    -->
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListView.MouseOver.Selected.Background" Color="{DynamicResource AccentActiveColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListView.MouseOver.Selected.Border" Color="{DynamicResource AccentHighlightColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListView.MouseOver.Header.Background" Color="{DynamicResource SemiactiveBackgroundColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListView.MouseOver.Header.Border" Color="{DynamicResource AccentColorKey}"/>
    
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListView.Selected.Background" Color="{DynamicResource AccentActiveColorKey}" />
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListView.Selected.Border" Color="{DynamicResource AccentColorKey}" />
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListView.Selected.Inactive.Background" Color="{DynamicResource HighlightBackgroundColorKey}" />
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListView.Selected.Inactive.Border" Color="{DynamicResource HighlightBackgroundColorKey}" />

    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListView.Pressed.Background" Color="{DynamicResource HighlightBackgroundColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListView.Pressed.Border" Color="{DynamicResource AccentColorKey}"/>

    <Style x:Key="MetroRadiance.Styles.ListView.GridViewScrollViewer"
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="Focusable"
                Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <!-- Grid.Column="0" Grid.Row="0" -->
                        <DockPanel Margin="{TemplateBinding Padding}">
                            <!-- Column Headers Scroll Viewer -->
                            <ScrollViewer DockPanel.Dock="Top"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"
                                          Focusable="False">
                                <!-- Set a Margin here because ListViewItem has a 2-width border around. Otherwise the horizontal scrolling of header bar and item will not keep the same pace -->
                                <GridViewHeaderRowPresenter Margin="0"
                                                            Columns="{Binding Path=TemplatedParent.View.Columns,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderStringFormat="{Binding Path=TemplatedParent.View.ColumnHeaderStringFormat,RelativeSource={RelativeSource TemplatedParent}}"
                                                            AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip,RelativeSource={RelativeSource TemplatedParent}}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                            <!-- Items Scroll Viewer -->
                            <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Local"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </DockPanel>
                        <!-- Horizontal Scroll Bar -->
                        <ScrollBar Name="PART_HorizontalScrollBar"
                                   Orientation="Horizontal"
                                   Grid.Row="1"
                                   Minimum="0.0"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Value="{Binding Path=HorizontalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Cursor="Arrow"/>
                        <!-- Vertical Scroll Bar -->
                        <ScrollBar Name="PART_VerticalScrollBar"
                                   Orientation="Vertical"
                                   Grid.Column="1"
                                   Minimum="0.0"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Value="{Binding Path=VerticalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Cursor="Arrow"/>
                        <!-- Right Bottom Corner -->
                        <DockPanel Grid.Column="1"
                                   Grid.Row="1"
                                   Background="{Binding Path=Background,ElementName=PART_VerticalScrollBar}"
                                   LastChildFill="False">
                            <Rectangle DockPanel.Dock="Left"
                                       Width="1"
                                       Fill="White"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <Rectangle DockPanel.Dock="Top"
                                       Height="1"
                                       Fill="White"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroRadiance.Styles.ListView.Thumb"
           TargetType="{x:Type Thumb}">
        <Setter Property="Canvas.Right"
                Value="-9"/>
        <Setter Property="Width"
                Value="18"/>
        <Setter Property="Height"
                Value="{Binding Path=ActualHeight,RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="Padding"
                Value="0"/>
        <Setter Property="Background"
                Value="{DynamicResource MetroRadiance.Brushes.ListView.Static.Header.Separator}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="Transparent">
                        <Rectangle HorizontalAlignment="Center"
                                   Width="1"
                                   Fill="{TemplateBinding Background}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroRadiance.Styles.ListView.GridViewColumnHeader"
           TargetType="{x:Type GridViewColumnHeader}"
           BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
        <Setter Property="Foreground"
                Value="{DynamicResource MetroRadiance.Brushes.ListView.Static.Header.Foreground}"/>
        <Setter Property="Background"
                Value="{DynamicResource MetroRadiance.Brushes.ListView.Static.Header.Background}"/>
        <Setter Property="BorderBrush"
                Value="{DynamicResource MetroRadiance.Brushes.ListView.Static.Header.Border}"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="BorderThickness"
                Value="0,0,0,1"/>
        <Setter Property="Padding"
                Value="2,0,2,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid SnapsToDevicePixels="True">
                        <Border Name="HeaderBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
                            <Border Padding="{TemplateBinding Padding}">
                                <ContentPresenter Name="HeaderContent"
                                                    Margin="0,0,0,1"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    RecognizesAccessKey="True"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Border>
                        <Border Name="HeaderHoverBorder"
                                BorderThickness="1"
                                Margin="0,0,0,0"/>
                        <Canvas>
                            <Thumb x:Name="PART_HeaderGripper"
                                   Style="{StaticResource MetroRadiance.Styles.ListView.Thumb}"/>
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource MetroRadiance.Brushes.ListView.MouseOver.Header.Background}"/>
                            <Setter TargetName="HeaderHoverBorder" Property="BorderBrush" Value="{DynamicResource MetroRadiance.Brushes.ListView.MouseOver.Header.Border}"/>
                            <Setter TargetName="PART_HeaderGripper" Property="Background" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource MetroRadiance.Brushes.ListView.Pressed.Background}"/>
                            <Setter TargetName="HeaderHoverBorder" Property="BorderBrush" Value="{DynamicResource MetroRadiance.Brushes.ListView.Pressed.Border}"/>
                            <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="HeaderContent" Property="Margin" Value="1,1,0,0"/>
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource MetroRadiance.Brushes.ListView.Disabled.Background}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role"
                     Value="Floating">
                <Setter Property="Opacity"
                        Value="0.4082"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Canvas Name="PART_FloatingHeaderCanvas">
                                <Rectangle Opacity="0.4697"
                                           Fill="#FF000000"
                                           Width="{TemplateBinding ActualWidth}"
                                           Height="{TemplateBinding ActualHeight}"/>
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="Padding">
                <Setter Property="Template">
                    <Setter.Value>
                        <!--The same as normal header, just no gripper.-->
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Border Name="HeaderBorder"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Height"
                                         Value="Auto">
                                    <Setter Property="MinHeight"
                                            Value="20"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- GridView Style -->
    <Style x:Key="MetroRadiance.Styles.ListView"
           TargetType="{x:Type ListView}">
        <Setter Property="Foreground" Value="{DynamicResource MetroRadiance.Brushes.ListView.Static.Foreground}"/>
        <Setter Property="Background" Value="{DynamicResource MetroRadiance.Brushes.ListView.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MetroRadiance.Brushes.ListView.Static.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource MetroRadiance.Styles.ListViewItem}"/>

        <Setter Property="mrap:ListViewProperties.ColumnHeaderDefaultContainerStyle"
                Value="{DynamicResource MetroRadiance.Styles.ListView.GridViewColumnHeader}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            Padding="0">
                        <ScrollViewer Padding="{TemplateBinding Padding}"
                                      Style="{DynamicResource MetroRadiance.Styles.ListView.GridViewScrollViewer}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource MetroRadiance.Brushes.ListView.Disabled.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource MetroRadiance.Brushes.ListView.Disabled.Border}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="True" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroRadiance.Styles.ListView.FocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle StrokeThickness="1"
                               RadiusX="2"
                               RadiusY="2"
                               Stroke="#8E6EA6F5"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--=================================================================
        ListViewItem
    ==================================================================-->
    <!-- GridView ItemContainerStyle -->
    <Style x:Key="MetroRadiance.Styles.ListViewItem" TargetType="{x:Type ListViewItem}">
        <Setter Property="Margin" Value="0,0,0,1"/>
        <Setter Property="Padding" Value="5,2,5,2"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource MetroRadiance.Styles.ListView.FocusVisualStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <!--remove the HorizontalAlignment due to HeaderRowPresenter does not have the ability to align to center or right-->
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource MetroRadiance.Brushes.ListView.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource MetroRadiance.Brushes.ListView.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource MetroRadiance.Brushes.ListView.Selected.Background}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource MetroRadiance.Brushes.ListView.Selected.Border}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource MetroRadiance.Brushes.ListView.Selected.Inactive.Background}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource MetroRadiance.Brushes.ListView.Selected.Inactive.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource MetroRadiance.Brushes.ListView.MouseOver.Selected.Background}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource MetroRadiance.Brushes.ListView.MouseOver.Selected.Border}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource MetroRadiance.Brushes.ListView.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>