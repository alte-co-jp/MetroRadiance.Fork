<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListBox.Static.Foreground" Color="{DynamicResource ActiveForegroundColorKey}" />
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListBox.Static.Background" Color="{DynamicResource SemiactiveBackgroundColorKey}" />
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListBox.Static.Border" Color="{DynamicResource BorderColorKey}" />
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListBox.Disabled.Foreground" Color="{DynamicResource InactiveForegroundColorKey}" />
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListBox.Disabled.Background" Color="{DynamicResource InactiveBackgroundColorKey}" />
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListBox.Disabled.Border" Color="{DynamicResource InactiveBorderColorKey}" />

    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListBox.MouseOver.Background" Color="{DynamicResource HighlightBackgroundColorKey}" />
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListBox.MouseOver.Border" Color="{DynamicResource HighlightBackgroundColorKey}" />
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListBox.MouseOver.Inactive.Background" Color="{DynamicResource HighlightBackgroundColorKey}" />
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListBox.MouseOver.Inactive.Border" Color="{DynamicResource HighlightBackgroundColorKey}" />
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListBox.MouseOver.Selected.Background" Color="{DynamicResource AccentActiveColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListBox.MouseOver.Selected.Border" Color="{DynamicResource AccentHighlightColorKey}"/>
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListBox.Selected.Background" Color="{DynamicResource AccentActiveColorKey}" />
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListBox.Selected.Border" Color="{DynamicResource AccentColorKey}" />
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListBox.Selected.Inactive.Background" Color="{DynamicResource HighlightBackgroundColorKey}" />
    <SolidColorBrush x:Key="MetroRadiance.Brushes.ListBox.Selected.Inactive.Border" Color="{DynamicResource HighlightBackgroundColorKey}" />

    <Style x:Key="MetroRadiance.Styles.ListBox" TargetType="{x:Type ListBox}">
        <Setter Property="Foreground" Value="{DynamicResource MetroRadiance.Brushes.ListBox.Static.Foreground}"/>
        <Setter Property="Background" Value="{DynamicResource MetroRadiance.Brushes.ListBox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MetroRadiance.Brushes.ListBox.Static.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            Padding="1">
                        <ScrollViewer Padding="{TemplateBinding Padding}"
                                      Focusable="False">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource MetroRadiance.Brushes.ListBox.Disabled.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource MetroRadiance.Brushes.ListBox.Disabled.Border}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="True" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroRadiance.Styles.ListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,1" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource &#221;}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        Padding="{TemplateBinding Padding}" 
                        SnapsToDevicePixels="True">
                        <ContentPresenter 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource MetroRadiance.Brushes.ListBox.Selected.Inactive.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource MetroRadiance.Brushes.ListBox.Selected.Inactive.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource MetroRadiance.Brushes.ListBox.Selected.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource MetroRadiance.Brushes.ListBox.Selected.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource MetroRadiance.Brushes.ListBox.MouseOver.Selected.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource MetroRadiance.Brushes.ListBox.MouseOver.Selected.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource MetroRadiance.Brushes.ListBox.MouseOver.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource MetroRadiance.Brushes.ListBox.MouseOver.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource MetroRadiance.Brushes.ListBox.MouseOver.Inactive.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource MetroRadiance.Brushes.ListBox.MouseOver.Inactive.Border}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource MetroRadiance.Brushes.ListBox.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>